{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { DeviceService } from './room-environment-monitor/device.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./room-environment-monitor/device.service\";\nfunction ProjectSampleComponent_div_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"device-status-card\", 4);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    var data_r3 = ctx.$implicit;\n    var ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"loading\", i0.ɵɵpipeBind1(2, 2, ctx_r2.getLoading$()))(\"status\", data_r3);\n  }\n}\nfunction ProjectSampleComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, ProjectSampleComponent_div_3_ng_container_1_Template, 3, 4, \"ng-container\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var cardData_r1 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", cardData_r1);\n  }\n}\nvar ProjectSampleComponent = /** @class */function () {\n  function ProjectSampleComponent(deviceService) {\n    this.deviceService = deviceService;\n  }\n  ProjectSampleComponent.prototype.ngOnInit = function () {\n    this.deviceService.getAllDevice();\n    this.cardData$ = this.deviceService.devices$.pipe(map(function (ds) {\n      return (ds || []).map(function (d) {\n        return {\n          name: d.name,\n          roomDescription: d.description,\n          lastActive: d.lastActivity,\n          cpuTemp: d.lastTelemetry.cpuTemp,\n          lux: d.lastTelemetry.lux,\n          co2: d.lastTelemetry.co2,\n          tvoc: d.lastTelemetry.tvoc,\n          roomTemp: d.lastTelemetry.roomTemp,\n          pressure: d.lastTelemetry.pressure,\n          humidity: d.lastTelemetry.humidity\n        };\n      });\n    }));\n  };\n  ProjectSampleComponent.prototype.getLoading$ = function () {\n    return this.deviceService.loading$;\n  };\n  ProjectSampleComponent.prototype.lastActiveDate = function (cd) {\n    if (isNaN(cd.lastActive.getTime())) {\n      return '';\n    }\n    return \"\".concat(cd.lastActive.getDay(), \"/\").concat(cd.lastActive.getMonth(), \"/\").concat(cd.lastActive.getFullYear());\n  };\n  ProjectSampleComponent.ɵfac = function ProjectSampleComponent_Factory(t) {\n    return new (t || ProjectSampleComponent)(i0.ɵɵdirectiveInject(i1.DeviceService));\n  };\n  ProjectSampleComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProjectSampleComponent,\n    selectors: [[\"project-sample\"]],\n    decls: 9,\n    vars: 3,\n    consts: [[1, \"project-sample-page-container\"], [\"class\", \"devices-container\", 4, \"ngIf\"], [1, \"devices-container\"], [4, \"ngFor\", \"ngForOf\"], [3, \"loading\", \"status\"]],\n    template: function ProjectSampleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"Devices\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, ProjectSampleComponent_div_3_Template, 2, 1, \"div\", 1);\n        i0.ɵɵpipe(4, \"async\");\n        i0.ɵɵelementStart(5, \"h1\");\n        i0.ɵɵtext(6, \"Telemetry\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"br\")(8, \"device-telemetry-table\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(4, 1, ctx.cardData$));\n      }\n    },\n    styles: [\".project-sample-page-container[_ngcontent-%COMP%]{display:flex;flex-direction:column}  device-telemetry-table table{width:800px}.devices-container[_ngcontent-%COMP%]{min-height:200px;display:flex;flex-direction:row;flex-wrap:wrap;justify-content:center}\"]\n  });\n  return ProjectSampleComponent;\n}();\nexport { ProjectSampleComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
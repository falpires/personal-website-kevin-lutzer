{"ast":null,"code":"import { of } from 'rxjs';\nimport { map, startWith, catchError } from 'rxjs/operators';\nimport { MODEL } from './visitor.model';\nimport { VisitorApiService } from './visitor.api.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./visitor.api.service\";\nvar VisitorService = /** @class */function () {\n  function VisitorService(visitorApiService, angularFirestore) {\n    this.visitorApiService = visitorApiService;\n    this.angularFirestore = angularFirestore;\n    this._collection = this.angularFirestore.collection(MODEL);\n  }\n  Object.defineProperty(VisitorService.prototype, \"visitors$\", {\n    get: function () {\n      return this._collection.valueChanges();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(VisitorService.prototype, \"loading$\", {\n    get: function () {\n      return this.visitors$.pipe(startWith([]), map(function (v) {\n        return !(v && !!v.length);\n      }), catchError(function () {\n        return of(false);\n      }));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  VisitorService.prototype.create = function (visitor) {\n    return this.visitorApiService.create(visitor);\n  };\n  VisitorService.ɵfac = function VisitorService_Factory(t) {\n    i0.ɵɵinvalidFactory();\n  };\n  VisitorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: VisitorService,\n    factory: VisitorService.ɵfac\n  });\n  return VisitorService;\n}();\nexport { VisitorService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { NgModule } from '@angular/core';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ProjectListComponent } from './list/project-list.component';\nimport { ProjectService } from './shared/project.service';\nimport { ProjectDetailsComponent } from './project-details/project-details.component';\nimport { SharedModule as ProjectSharedModule } from '../shared';\nimport { CoreModule as ProjectCoreModule } from '../core';\nimport { ProjectSampleComponent } from './sample/project-sample.component';\n// import { DeviceTelemetryTable } from './sample/device-telemetry-table/device-telemetry-table.component' \n// import { DeviceStatusCard } from './sample/device-status-card/device-status-card.component';\n// import { DeviceService, TelemetryService } from './sample/room-environment-monitor';\n// import { environment } from '../../environments/environment';\nvar ProjectModule = /** @class */function () {\n  function ProjectModule() {}\n  ProjectModule = __decorate([NgModule({\n    declarations: [ProjectSampleComponent, ProjectListComponent, ProjectDetailsComponent\n    // DeviceTelemetryTable,\n    // DeviceStatusCard\n    ],\n\n    imports: [MatCardModule, MatChipsModule, MatButtonModule, MatTableModule, MatPaginatorModule, MatProgressSpinnerModule, MatProgressBarModule, ProjectSharedModule, ProjectCoreModule, FlexLayoutModule],\n    exports: [ProjectDetailsComponent],\n    providers: [\n    // DeviceService,\n    // TelemetryService,\n    ProjectService\n    // {provide: 'IOT-DEVICE-GCF-HOST', useValue: environment.iotDeviceHost}\n    ]\n  })], ProjectModule);\n  return ProjectModule;\n}();\nexport { ProjectModule };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}